Index: test_stuff/src/pages/input.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n<script> \r\nimport BaseButton from '@/components/Basebutton.vue';\r\nimport router from '@/router';\r\nexport default {\r\n    data() {\r\n        return {\r\n            pickedWords: new Array(),\r\n            userText: '',\r\n            isDone: true,\r\n        }\r\n    },\r\n    mounted() { \r\n    },\r\n    components: {\r\n        BaseButton\r\n    },\r\n    methods: {\r\n        async fatchdata() {\r\n            this.pickWords();\r\n            const resp = {\r\n                unknown_words: this.pickedWords,\r\n            };\r\n            const response = await fetch(\"http://127.0.0.1:8000/wordlist/post\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n                body: JSON.stringify(resp),\r\n            })\r\n            const blob = await response.blob();\r\n            const url = window.URL.createObjectURL(blob);\r\n            let a = document.createElement('a');\r\n            a.href = url;\r\n            a.setAttribute(\"download\", \"Anki_deck.csv\");\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            a.remove();\r\n        },\r\n        pickWords() {\r\n            this.pickedWords = [];\r\n            let words = this.userText.split(\" \");\r\n            let length = words.length;\r\n            for (let i = 0; i < 10; i++) {\r\n                this.pickedWords.push(words[Math.floor(Math.random() * length)])\r\n            }\r\n        },\r\n        showProccessingTitle() {\r\n            let div = document.createElement('div');\r\n            div.innerHTML = \"Proccessing...\";\r\n        }\r\n    },\r\n    watch: {\r\n        isDone(newIsDone) {\r\n\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<template>\r\n   <main>\r\n        <div class = \"header\">Введите текст песни или книги</div>\r\n        <div class = \"form-container\">\r\n            <form>\r\n                <textarea id = \"text\" v-model=\"userText\" placeholder=\"Например: To be, or not to be, that is the question. Whether...\"></textarea>\r\n            </form>\r\n        </div>\r\n        <BaseButton class = \"submit\" @click=\"fatchdata()\">Сгенерировать деку</BaseButton>\r\n   </main>\r\n</template>\r\n\r\n<style scoped> \r\n    main {\r\n        margin: 0 px;\r\n        font-family: \"Inter\", sans-serif;\r\n        font-optical-sizing: auto;\r\n        font-weight: 300;\r\n        font-style: normal;\r\n        color: white;\r\n        font-size: 17px;\r\n    }\r\n    .header {\r\n        font-family: \"Roboto\", sans-serif;\r\n        font-optical-sizing: auto;\r\n        font-weight: 400;\r\n        font-style: normal;\r\n        font-variation-settings:      \r\n        \"wdth\" 100;\r\n        text-align: center;\r\n        font-size: 32px;\r\n    }\r\n    .form-container {\r\n        align-self: center;\r\n        width: 600px;\r\n        margin: 0 auto;\r\n        margin-top:20px;\r\n    }\r\n    #text {\r\n        background-color: transparent;\r\n        border-radius: 10px;\r\n        padding-top:0.5em;\r\n        height: 150px;\r\n        border: 1px solid whitesmoke;\r\n        width: 100%;\r\n        color: white;\r\n        box-sizing: border-box;\r\n        padding-left: 0.5em;\r\n        font-size: 14px;\r\n        resize: vertical;\r\n    }\r\n    #text::placeholder {\r\n        text-align: left;\r\n        color: white;\r\n        opacity: 0.8;\r\n    }\r\n    #text:focus {\r\n        outline: none;\r\n        box-shadow: none;\r\n    }\r\n    .submit {\r\n        align-self: center;\r\n        width: 255px;\r\n        height: 60px;\r\n        border-radius: 0;\r\n        border: 1px solid whitesmoke;\r\n        margin: 0 auto; \r\n        margin-top: 300px;\r\n        \r\n    }\r\n    \r\n</style>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test_stuff/src/pages/input.vue b/test_stuff/src/pages/input.vue
--- a/test_stuff/src/pages/input.vue	(revision b131cd18610e8fcf465ea321d4e846aa181a272b)
+++ b/test_stuff/src/pages/input.vue	(date 1751116051161)
@@ -48,6 +48,12 @@
         showProccessingTitle() {
             let div = document.createElement('div');
             div.innerHTML = "Proccessing...";
+        },
+        goToFilter() {
+            router.push({name: 'Filter'});
+        },
+        goBack() {
+            router.push({name: "Welcom"})
         }
     },
     watch: {
@@ -60,17 +66,24 @@
 
 <template>
    <main>
+    <header>
+        <h2 @click="goBack"><-- Вернуться назад</h2>
+    </header>
         <div class = "header">Введите текст песни или книги</div>
         <div class = "form-container">
             <form>
-                <textarea id = "text" v-model="userText" placeholder="Например: To be, or not to be, that is the question. Whether..."></textarea>
+                <textarea id = "text" v-model="userText" placeholder="Например:
+To be, or not to be, that is the question. 
+Whether..."></textarea>
             </form>
         </div>
-        <BaseButton class = "submit" @click="fatchdata()">Сгенерировать деку</BaseButton>
+        <!-- <BaseButton class = "submit" @click="fatchdata()">Сгенерировать деку</BaseButton> -->
+        <BaseButton :onClick="goToFilter" class = "submit">Перейти к генерации деки</BaseButton>
    </main>
 </template>
 
 <style scoped> 
+
     main {
         margin: 0 px;
         font-family: "Inter", sans-serif;
@@ -80,6 +93,29 @@
         color: white;
         font-size: 17px;
     }
+    header h2 {
+        font-size: 15px;
+        font-weight: 100;
+    }
+    header h2:hover {
+        cursor: pointer;
+        text-decoration: underline;
+        text-decoration-color: #fff;
+        text-underline-offset: 4px;
+    }
+    main {
+        margin: 0 px;
+        font-family: "Roboto", sans-serif;
+        font-optical-sizing: auto;
+        font-weight: 300;
+        font-style: normal;
+        color: white;
+        font-size: 17px;
+
+    }
+    header {
+        font-family: "Inter", sans-serif;
+    }
     .header {
         font-family: "Roboto", sans-serif;
         font-optical-sizing: auto;
@@ -101,18 +137,20 @@
         border-radius: 10px;
         padding-top:0.5em;
         height: 150px;
-        border: 1px solid whitesmoke;
+        border: 2px solid whitesmoke;
         width: 100%;
         color: white;
         box-sizing: border-box;
         padding-left: 0.5em;
         font-size: 14px;
         resize: vertical;
+        font-size: 15px;
     }
     #text::placeholder {
         text-align: left;
         color: white;
         opacity: 0.8;
+        font-size: 15px;
     }
     #text:focus {
         outline: none;
@@ -123,9 +161,9 @@
         width: 255px;
         height: 60px;
         border-radius: 0;
-        border: 1px solid whitesmoke;
+
         margin: 0 auto; 
-        margin-top: 300px;
+        margin-top: 35px;
         
     }
     
Index: test_stuff/src/pages/tinder.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test_stuff/src/pages/tinder.vue b/test_stuff/src/pages/tinder.vue
new file mode 100644
--- /dev/null	(date 1751116051161)
+++ b/test_stuff/src/pages/tinder.vue	(date 1751116051161)
@@ -0,0 +1,155 @@
+<script> 
+import BaseButton from '@/components/Basebutton.vue';
+import router from '@/router';
+
+
+export default {
+    data() {
+        return {
+            countleft: 0,
+            countadded: 0
+        }
+    },
+    mounted() { 
+
+    },
+    components: {
+        BaseButton
+    },
+    methods: {
+        goBack() {
+            router.push({name: 'Filter'});
+        },
+    },
+    watch: {
+    }
+}
+</script>
+
+<template>
+   <main>
+    <header>
+        <h2 @click="goBack"><-- Вернуться назад</h2>
+    </header>
+        <div class = "header">Тиндер слов</div>
+        <div class = "card-container">
+            <div class = "goBack">
+                Вернуться к предыдущему слову
+            </div>
+            <div class = "card">
+                <img class="corner-img" src="/star.png" alt="star">
+                <div class="word">Word</div>
+                <div class = "button-container">
+                    <button class = "like left"><img src="/dislike.png" alt="disike"></button>
+                    <button class = "like right"><img src="/like.png" alt="like"></button>
+                </div>
+            </div>
+            <h2>Слов осталось: {{ countleft }}</h2>
+            <h2>Слов добавлено в деку: {{ countadded }}</h2>
+        </div>
+        
+   </main>
+</template>
+
+<style scoped> 
+    header h2 {
+        font-size: 15px;
+        font-weight: 100;
+    }
+    header h2:hover {
+        cursor: pointer;
+        text-decoration: underline;
+        text-decoration-color: #fff;
+        text-underline-offset: 4px;
+    }
+    main {
+        margin: 0 px;
+        font-family: "Roboto", sans-serif;
+        font-optical-sizing: auto;
+        font-weight: 300;
+        font-style: normal;
+        color: white;
+        font-size: 17px;
+    }
+    header {
+        font-family: "Inter", sans-serif;
+
+    }
+    .header {
+        font-family: "Roboto", sans-serif;
+        font-optical-sizing: auto;
+        font-weight: 400;
+        font-style: normal;
+        font-variation-settings:      
+        "wdth" 100;
+        text-align: center;
+        font-size: 32px;
+    }
+    .card-container {
+        margin: 0 auto;
+        width: 570px;
+        margin-top: 88px;
+    }
+    .goBack {
+        padding-left: 15px;
+        font-size: 15px;
+    }
+    .goBack:hover {
+        cursor: pointer;
+        text-decoration:underline;
+        text-decoration-color: #fff;
+        text-underline-offset: 3px;
+    }
+    
+    .card {
+        width:100%;
+        height: 230px;
+        border: 2px solid white;
+        border-radius: 20px;
+        display: flex;
+        flex-direction: column;
+        justify-content: center;
+        align-items: center;
+        position: relative;
+    }
+    .word {
+        flex: 1 1 auto;
+        display: flex;
+        justify-content: center;
+        align-items: center;
+        width: 100%;
+        font-family: "Roboto", sans-serif;
+        font-size: 60px;
+        font-weight: 350;
+    }
+    .button-container {
+        position: absolute;
+        bottom: 0;
+        left: 0;
+        width: 100%;
+        display: flex;
+        justify-content: space-between;
+        padding: 0 20px 20px 20px;
+        box-sizing: border-box;
+    }
+    .like.left {
+        align-self: flex-end;
+    }
+    .like.right {
+        align-self: flex-end;
+    }
+    .like {
+        background-color: transparent;
+        border: 0px;
+    }
+    .corner-img {
+        position: absolute;
+        top: 15px;
+        right: 25px;
+    }
+    .card-container h2{
+        text-align: center;
+        font-size: 20px;
+        font-weight: 350;
+    }
+</style>
\ No newline at end of file
Index: test_stuff/src/router/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { createRouter, createWebHashHistory } from 'vue-router';\r\nimport WelcomPage from '@/pages/welcomPage.vue';\r\nimport GenerSettings from '@/pages/generSetPage.vue';\r\nimport PasteTextPage from '@/pages/pasteTextPage.vue';\r\nimport FinalPage from '@/pages/finalPage.vue';\r\nimport Input from '@/pages/input.vue';\r\n\r\n\r\nconst routes = [\r\n  { path: '/', name: 'Welcom', component: WelcomPage },\r\n  { path: '/generSettings', name: 'GenerSettings', component: GenerSettings },\r\n  { path: '/pasteText', name: 'PasteText', component: PasteTextPage },\r\n  { path: '/result', name: 'FinalPage', component: FinalPage},\r\n  { path: '/input', name: 'Input', component: Input}\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHashHistory('/anki_deck/'),\r\n  routes\r\n});\r\n\r\nexport default router;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test_stuff/src/router/index.js b/test_stuff/src/router/index.js
--- a/test_stuff/src/router/index.js	(revision b131cd18610e8fcf465ea321d4e846aa181a272b)
+++ b/test_stuff/src/router/index.js	(date 1751116051162)
@@ -1,17 +1,19 @@
 import { createRouter, createWebHashHistory } from 'vue-router';
 import WelcomPage from '@/pages/welcomPage.vue';
 import GenerSettings from '@/pages/generSetPage.vue';
-import PasteTextPage from '@/pages/pasteTextPage.vue';
+import Filter from '@/pages/filter.vue';
 import FinalPage from '@/pages/finalPage.vue';
 import Input from '@/pages/input.vue';
+import Tinder from '@/pages/tinder.vue';
 
 
 const routes = [
   { path: '/', name: 'Welcom', component: WelcomPage },
   { path: '/generSettings', name: 'GenerSettings', component: GenerSettings },
-  { path: '/pasteText', name: 'PasteText', component: PasteTextPage },
+  { path: '/filter', name: 'Filter', component: Filter },
   { path: '/result', name: 'FinalPage', component: FinalPage},
-  { path: '/input', name: 'Input', component: Input}
+  { path: '/input', name: 'Input', component: Input},
+  { path: '/tinder', name: 'Tinder', component: Tinder},
 ];
 
 const router = createRouter({
Index: test_stuff/src/pages/filter.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test_stuff/src/pages/filter.vue b/test_stuff/src/pages/filter.vue
new file mode 100644
--- /dev/null	(date 1751116051160)
+++ b/test_stuff/src/pages/filter.vue	(date 1751116051160)
@@ -0,0 +1,235 @@
+<script> 
+import BaseButton from '@/components/Basebutton.vue';
+import router from '@/router';
+
+export default {
+    data() {
+        return {
+            maxword: 90,
+            lenword: 90,
+            choice: 0 // 0 - tinder, 1 - manually, 2 - word list
+        }
+    },
+    mounted() { 
+            const sliders = this.$el.querySelectorAll('.slider');
+            sliders.forEach(slider => {
+                const min = Number(slider.min);
+                const max = Number(slider.max);
+                const percent = ((slider.value - min) / (max - min)) * 100;
+                slider.style.background = `linear-gradient(to right, #34c759 ${percent}%, #fff ${percent}%)`;
+            });
+    },
+    components: {
+        BaseButton
+    },
+    methods: {
+        progressScript(event) {
+            const sliderEl = event.target;
+            const min = Number(sliderEl.min);
+            const max = Number(sliderEl.max);
+            const percent = ((sliderEl.value - min) / (max - min)) * 100;
+            sliderEl.style.background = `linear-gradient(to right, #34c759 ${percent}%, #fff ${percent}%)`;
+        },
+        goBack() {
+            router.push({name: 'Input'});
+        },
+        redirect(event) {
+            event.preventDefault();
+            const names = ["Tinder", "Manual", "List"];
+            router.push({ name: names[this.choice] });
+        }
+    },
+    watch: {
+    }
+}
+</script>
+
+<template>
+   <main>
+    <header>
+        <h2 @click="goBack"><-- Вернуться назад</h2>
+    </header>
+        <div class = "header">Параметры генерации</div>
+        <form class = "filter-container">
+            <div class = "max-words">
+                <h2 id = "header">Макс. кол-во слов в тексте</h2>
+                <div class = "slider-container">
+                    <input type="range" min = "1" max = "180" v-model = "maxword" value = "90" class = "slider" @input="progressScript">
+                    <div class = "number-list">
+                        <div class = "col">
+                            1
+                        </div>
+                        <div class = "col">
+                            {{ maxword }}
+                        </div>
+                        <div class = "col">
+                            180
+                        </div>
+                    </div>
+                </div>
+            </div>
+            <div class = "max-words">
+                <h2 id = "header">Кол-во незнакомых слов</h2>
+                <div class = "slider-container">
+                    <input type="range" min = "1" max = "180" v-model = "lenword" value = "90" class = "slider" @input="progressScript">
+                    <div class = "number-list">
+                        <div class = "col">
+                            1
+                        </div>
+                        <div class = "col">
+                            {{ lenword }}
+                        </div>
+                        <div class = "col">
+                            180
+                        </div>
+                    </div>
+                </div>
+            </div>
+            <div class = "choose">
+                <h2 id = "header">Кол-во незнакомых слов</h2>
+                <div class = "radio-container">
+                    <label class="check" for="choice0">
+                        <input type="radio" id="choice0" name="choice" value="0" v-model="choice">
+                        <span class="radio-label">Тиндер</span>
+                    </label>
+                    <label class="check" for="choice1">
+                        <input type="radio" id="choice1" name="choice" value="1" v-model="choice">
+                        <span class="radio-label">Вручную</span>
+                    </label>
+                    <label class="check" for="choice2">
+                        <input type="radio" id="choice2" name="choice" value="2" v-model="choice">
+                        <span class="radio-label">Список</span>
+                    </label>
+                </div>
+            </div>
+        </form>
+        <BaseButton class = "submit" @click="redirect">Перейти к выборке слов</BaseButton>
+   </main>
+</template>
+
+<style scoped> 
+    header h2 {
+        font-size: 15px;
+        font-weight: 100;
+    }
+    header h2:hover {
+        cursor: pointer;
+        text-decoration: underline;
+        text-decoration-color: #fff;
+        text-underline-offset: 4px;
+    }
+    main {
+        margin: 0 px;
+        font-family: "Roboto", sans-serif;
+        font-optical-sizing: auto;
+        font-weight: 300;
+        font-style: normal;
+        color: white;
+        font-size: 17px;
+    }
+    header {
+        font-family: "Inter", sans-serif;
+    }
+    .header {
+        font-family: "Roboto", sans-serif;
+        font-optical-sizing: auto;
+        font-weight: 400;
+        font-style: normal;
+        font-variation-settings:      
+        "wdth" 100;
+        text-align: center;
+        font-size: 32px;
+    }
+    .filter-container h2 {
+        font-size: 20px;
+        font-weight: 400;
+    }
+    .slider-container input {
+        width: 100%;
+    }
+    .filter-container {
+        margin: 0 auto;
+        width: 50%;
+        text-align: center;
+        align-items: center;
+    }
+    .slider {
+        -webkit-appearance: none;
+        background-color: whitesmoke;
+        border-radius: 25px;
+        height: 18px;
+
+    }
+    .slider::-webkit-slider-thumb {
+        -webkit-appearance: none;
+        appearance: none;
+        width:7px;
+        height: 32px;
+        background-color: #34c759;        
+        border-radius: 20px;
+
+    }
+    .slider::-moz-range-thumb {
+        transition: .2s ease-in-out;
+    }
+    .slider::webkit-slider-thumb:hover { 
+        box-shadow: 0 0 0 10px #34c75928
+    }
+    .slider:active::webkit-slider-thumb { 
+        box-shadow: 0 0 0 13px #34c7593d
+    }
+    .slider:hover::webkit-slider-thumb { 
+        box-shadow: 0 0 0 13px #34c7593d
+    }
+    .number-list{
+        margin-top:10px;
+        display: flex;
+        width: 100%;
+        justify-content: space-between;
+        align-items: center;
+    }
+    .number-list:nth-child(2){
+        padding-left:10px;
+    }
+    .radio-container {
+        display: flex;
+        gap: 2em;
+        align-items: center;
+        width: 100%;
+        justify-content: center;
+    }
+    .check {
+        display: flex;
+        justify-content:left;
+        align-items: center;
+        gap: 1em;
+        cursor: pointer;
+        transition: background 0.2s;   
+    }
+    .check input {
+        appearance: none;
+        width: 16px;
+        height: 16px;
+        border: 2px solid #fff;
+        border-radius: 50%;
+    }
+    .check input:checked {
+        background-color: #34c759;
+        border: 2px solid #34c759;
+    }
+    .check span {
+        width: auto;
+    }
+    .radio-label {
+        margin-left: 0.5em;
+        width: auto;
+    }
+    .submit {
+        margin: 0 auto;
+        margin-top: 3em;
+        width: 255px;
+        height: 60px;   
+        border-radius: 0px;
+        padding: 0;
+    }
+</style>
\ No newline at end of file
Index: test_stuff/src/pages/welcomPage.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><script> \r\nimport Basebutton from '@/components/Basebutton.vue';\r\nimport router from '@/router';\r\nimport ArrowWithHint from '@/components/ArrowWithHint.vue';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            right: -18,\r\n            secondRight: 20,\r\n            isMobile: window.innerWidth <= 550,\r\n        }\r\n    },\r\n    mounted() { \r\n        this.resizeHandler();\r\n        window.addEventListener('resize', this.resizeHandler);\r\n    },\r\n    components: {\r\n        Basebutton,\r\n        ArrowWithHint\r\n    },\r\n    methods: {\r\n        goToGenerSettings() {\r\n            router.push({name: 'GenerSettings'});\r\n        },\r\n        goToPasteText() {\r\n            router.push({name: 'Input'});\r\n        },\r\n        resizeHandler() {\r\n            const query = window.matchMedia('(max-width: 550px)');\r\n            this.isMobile = query.matches;\r\n            if (this.isMobile) {\r\n                this.right = 19;\r\n                this.secondRight = -15;\r\n                return false;\r\n            }else {\r\n                this.right = -18;\r\n                this.secondRight = 20;\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div class=\"welcome-page\">\r\n        <h1>DANKO’s </h1>\r\n        <h1>Anki Deck Generator</h1>\r\n        <div class=\"mainContent\">\r\n            <div class=\"grid-cell\">\r\n                <ArrowWithHint class=\"leftArrow\" :isMirrored=\"isMobile\" :right=\"secondRight\" >идеально для начинающих</ArrowWithHint>\r\n            </div>\r\n            <div class=\"button-conteiner\">\r\n                <Basebutton :onClick=\"goToGenerSettings\" class=\"welcome-button\"> Генерация на основе популярных слов</Basebutton>\r\n                <Basebutton :onClick=\"goToPasteText\" class=\"welcome-button\">Генерация на основе текста песни / книги</Basebutton>\r\n            </div>\r\n            <div class=\"grid-cell\">\r\n                <ArrowWithHint :isMirrored = \"!isMobile\"  class=\"rightArrow\" :right=\"right\" style=\"text-align: center;\">подойдет тем, кто уже знаком с основами языка</ArrowWithHint>\r\n            </div>\r\n        </div>\r\n        <div style=\"flex-grow: 1.5;\"></div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped> \r\n.rightArrow, .leftArrow {\r\n    /* background-color: grey; */\r\n    aspect-ratio: 2.68/1;\r\n    min-width: 100%;\r\n    position: absolute;\r\n}\r\n.welcome-button {\r\n    font-weight: 600;\r\n\r\n}\r\nh1 {\r\n    font-family: Krona One;\r\n    font-size: 48px;\r\n    text-align: center;\r\n    margin-top: 0%;\r\n    margin-bottom: 0px;\r\n\r\n}\r\n.mainContent {\r\n    flex-grow: 2;\r\n    font-family: \"Inter\", sans-serif;\r\n    font-optical-sizing: auto;\r\n    font-weight: 570;\r\n    font-style: normal;\r\n    display: grid;\r\n    grid-template-columns: 1fr 2fr 1fr;\r\n    justify-items: center;\r\n    align-items: center;\r\n    padding-top: 1.5%;\r\n    height: 100%;\r\n    width: 100%;\r\n    position: relative;\r\n}\r\n.welcome-page {\r\n    /* background-color: bisque; */\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 100%;\r\n    align-items: center;\r\n}\r\n.button-conteiner {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 3em 0%;\r\n    min-height: fit-content;\r\n    align-items: center;\r\n    width: 100%;\r\n}\r\n.grid-cell {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n@media (max-width: 550px) {\r\n    h1 {\r\n        font-size: 25px;\r\n    }\r\n    .welcome-button{\r\n        font-size: 13px;\r\n        width: 70%;\r\n    }\r\n    .mainContent {\r\n        grid-template-columns: 1fr;\r\n        grid-template-rows: 1fr 2fr 1fr;\r\n    }\r\n    .rightArrow {\r\n        transform: rotate(319deg);\r\n        font-size: 10px;\r\n        width: 35%;\r\n        min-width: min-content;\r\n        left: 4%;\r\n    }\r\n    .leftArrow {\r\n        transform: rotate(333deg);\r\n        font-size: 10px;\r\n        width: 35%;\r\n        min-width: min-content; \r\n        left: 70%;\r\n    }\r\n}\r\n@media (min-width: 551px) {\r\n    h1 {\r\n        font-size: 35px;\r\n    }\r\n    .welcome-button {\r\n        width: 85%;\r\n        font-size: 18px;\r\n    }\r\n    .rightArrow {\r\n        top: 38%;\r\n        left: -9%;\r\n        font-size: 12px;\r\n        width: 90%;\r\n        min-width: min-content;\r\n    }\r\n    .leftArrow {\r\n        top: 17%;\r\n        left: 30%;\r\n        font-size: 12px;\r\n    }\r\n}\r\n@media (min-width: 800px) {\r\n    h1 {\r\n        font-size: 45px;\r\n    }\r\n    .welcome-button {\r\n        width: 60%;\r\n        font-size: 23px;\r\n    }\r\n    .rightArrow {\r\n        top: 40%;\r\n        left: -30%;\r\n        font-size: 15px;\r\n    }\r\n    .leftArrow {\r\n        top: 10%;\r\n        left: 40%;\r\n        font-size: 15px;\r\n    }\r\n}\r\n@media (min-width: 1115px) {\r\n    h1 {\r\n        font-size: 45px;\r\n    }\r\n    .welcome-button {\r\n        width: 60%;\r\n        font-size: 25px;\r\n    }\r\n    .rightArrow {\r\n        top: 45%;\r\n        left: -40%;\r\n        font-size: 23px;\r\n    }\r\n    .leftArrow {\r\n        top: 10%;\r\n        left: 40%;\r\n        font-size: 23px;\r\n    }\r\n}\r\n</style>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test_stuff/src/pages/welcomPage.vue b/test_stuff/src/pages/welcomPage.vue
--- a/test_stuff/src/pages/welcomPage.vue	(revision b131cd18610e8fcf465ea321d4e846aa181a272b)
+++ b/test_stuff/src/pages/welcomPage.vue	(date 1751116051161)
@@ -71,7 +71,7 @@
     position: absolute;
 }
 .welcome-button {
-    font-weight: 600;
+    font-weight: 100;
 
 }
 h1 {
@@ -84,15 +84,14 @@
 }
 .mainContent {
     flex-grow: 2;
-    font-family: "Inter", sans-serif;
+    font-family: "Roboto", sans-serif;
     font-optical-sizing: auto;
-    font-weight: 570;
+    font-weight: 50;
     font-style: normal;
     display: grid;
     grid-template-columns: 1fr 2fr 1fr;
     justify-items: center;
     align-items: center;
-    padding-top: 1.5%;
     height: 100%;
     width: 100%;
     position: relative;
